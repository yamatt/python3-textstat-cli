name: Python3

env:
  name: textstat_cli
  command: textstat

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  lint:
    name: Run some linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Lint
        run: |
          python3 -m pip install flake8==3.7.8
          python3 -m pip install black==19.10b0
          # look for formatting errors
          python3 -m black --diff --check --target-version py35 --target-version py36 --target-version py37 .
          # stop the build if there are Python syntax errors or undefined names
          python3 -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          python3 -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  test:
    name: Test the library
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt
      - name: Test
        run: |
          python3 -m unittest discover tests
          python3 -m ${{env.name}} --help
          python3 -m ${{env.name}} samples/lorium.txt
  publish:
      name: Publish to PyPI
      runs-on: ubuntu-latest
      needs:
          - test
          - lint
      steps:
        - uses: actions/checkout@v2
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}
        - name: Publish to PyPI
          run: |
            python3 -m pip install setuptools==50.1.0 twine==3.2.0 wheel==0.35.1
            python3 setup.py sdist
            python3 -m twine check dist/*
            python3 -m twine upload -u "__token__" -p "${{ secrets.PYPI_API }}" dist/*
